options {
IGNORE_CASE = true;
STATIC = false;
}

PARSER_BEGIN(Gramatica)
package Generador1;

public class Gramatica {}
PARSER_END(Gramatica)

SKIP : {
	" "
	| "\t"
	| "\r"
	| "\n"
}

TOKEN : {
	  <NUMERO: (["0"-"9"])+>
    | <DECIMAL: (["0"-"9"])+"."(["0"-"9"])+>
    | <PARENI: "(">
    | <PAREND: ")">
    | <SUMA: "+">
    | <RESTA: "-">
    | <MULTIPLICACION: "*">
    | <DIVISION: "/">
}

void Analizar():
{}
{
    (Expresion())+ <EOF>
}

void Expresion():
{}
{
    MultiplicacionDivision()((<SUMA> | <RESTA>) MultiplicacionDivision())*
}

void MultiplicacionDivision():
{}
{
    Parentesis()((<MULTIPLICACION> | <DIVISION>) Parentesis())*
}

void Parentesis():
{}
{
    <PARENI> Expresion() <PAREND> | Numero()
}

void Numero():
{}
{
    <NUMERO> | <DECIMAL>
}
